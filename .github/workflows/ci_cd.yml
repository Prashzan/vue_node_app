name: CI/CD Pipeline

# Trigger workflow on push to any branch and pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Define jobs for the pipeline
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Cache Docker layers for faster builds
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose


    # Step 4: Build and test the Docker Compose setup
    - name: Build and Test Docker Compose
      run: |
        docker-compose -f docker-compose.yaml build --parallel
        docker-compose -f docker-compose.yaml up -d
        docker-compose exec backend npm test  # If you have tests to run

    # Step 5: Deploy step (Optional for local automation)
    - name: Run deploy script locally
      run: ./deploy.sh
      if: success()

    # Step 6: Notify the status via GitHub
    - name: Notify status
      if: failure()
      run: echo "The deployment failed!"
    - name: Notify success
      if: success()
      run: echo "The deployment succeeded!"
